composer require laravel/passport:v7.5.1 --with-all-dependencies
php artisan make:middleware Cors

php artisan make:controller Api/AuthController

php artisan passport:install
php artisan passport:keys
composer require fruitcake/laravel-cors
php artisan vendor:publish --tag="cors"
composer update lcobucci/jwt --with-dependencies
php artisan passport:keys --force

php artisan config:clear
php artisan cache:clear
php artisan serve --port=8000

php artisan make:migration add_discount_rate_to_invoices_table

curl -X POST http://127.0.0.1:8000/api/login -H "Content-Type: application/json" -d '{"email":"admin@admin.com","password":"admin123"}'
curl -X POST http://127.0.0.1:8000/api/login -H "Content-Type: application/json" -d "{\"email\":\"admin@admin.com\",\"password\":\"admin123\"}"

offers winned and lost
offres par client
offres par user

invoice date créé

paiement status
paiement source status
paiement jour
paiement client

offers closed

order by(depassant les izao no atao tel couleur)

lead - offres -invoices -payements

composer install
php artisan migrate --seed
php artisan key:generate
npm install 
npm run dev
php artisan migrate:fresh --seed && php artisan db:seed --class=DummyDatabaseSeeder


CREATE TRIGGER before_insert_clients_uuid BEFORE INSERT ON clients FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_clients_date_create BEFORE INSERT ON clients FOR EACH ROW SET NEW.created_at = now();
CREATE TRIGGER before_insert_contacts_uuid BEFORE INSERT ON contacts FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_contacts_date_create BEFORE INSERT ON contacts FOR EACH ROW SET NEW.created_at = now();
CREATE TRIGGER before_insert_projects_uuid BEFORE INSERT ON projects FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_projects_date_create BEFORE INSERT ON projects FOR EACH ROW SET NEW.created_at = now();
CREATE TRIGGER before_insert_tasks_uuid BEFORE INSERT ON tasks FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_tasks_date_create BEFORE INSERT ON tasks FOR EACH ROW SET NEW.created_at = now();
CREATE TRIGGER before_insert_leads_uuid BEFORE INSERT ON leads FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_leads_date_create BEFORE INSERT ON leads FOR EACH ROW SET NEW.created_at = now();
CREATE TRIGGER before_insert_offers_uuid BEFORE INSERT ON offers FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_offers_date_create BEFORE INSERT ON offers FOR EACH ROW SET NEW.created_at = now();

CREATE TRIGGER before_insert_invoice_lines_uuid BEFORE INSERT ON invoice_lines FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_invoice_lines_date_create BEFORE INSERT ON invoice_lines FOR EACH ROW SET NEW.created_at = now();

CREATE TRIGGER before_insert_products_uuid BEFORE INSERT ON products FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_products_date_create BEFORE INSERT ON products FOR EACH ROW SET NEW.created_at = now();



CREATE TRIGGER before_insert_invoices_uuid BEFORE INSERT ON invoices FOR EACH ROW SET NEW.external_id = UUID();
CREATE TRIGGER before_insert_invoices_date_create BEFORE INSERT ON invoices FOR EACH ROW SET NEW.created_at = now();

